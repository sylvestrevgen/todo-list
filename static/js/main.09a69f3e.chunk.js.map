{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-button/index.js","components/item-status-button/item-status-button.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","props","type","onChange","onSearchChange","placeholder","value","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusButton","classes","onBtnClick","buttonLabel","ItemStatusFilter","this","statusButtonActive","Component","ItemAddForm","state","onLabelChange","event","setState","target","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","searchText","deleteItem","filter","el","addItem","text","newItem","toggleProperty","textContent","todoLS","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","arr","propName","idx","findIndex","oldItem","slice","items","length","toLowerCase","includes","btnType","visibleItems","onStatusFilterItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09a69f3e.chunk.js","sourcesContent":["import AppHeader from \"./app-header\";\n\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from \"./search-panel\";\n\nexport default SearchPanel;","import React from 'react';\n\nimport './search-panel.css';\n\nconst SearchPanel = (props) => {\n  return (\n    <input type=\"text\"\n      className=\"form-control search-input\" \n      onChange={props.onSearchChange}\n      placeholder=\"Type to search...\" \n      value={props.value} />\n  );\n};\n\nexport default SearchPanel;\n","import TodoListItem from \"./todo-list-item\";\n\nexport default TodoListItem;","import React from 'react';\n\nimport './todo-list-item.css';\n\nconst TodoListItem = ({\n  label,\n  onDeleted,\n  onToggleImportant,\n  onToggleDone,\n  done,\n  important\n}) => {\n\n  let classNames = \"todo-list-item\";\n\n  if (done) {\n    classNames += \" done\";\n  };\n\n  if (important) {\n    classNames += \" important\";\n  };\n\n  return (\n    <span className={classNames}>\n      <span\n        className=\"todo-list-item-label\"\n        onClick={onToggleDone}>\n        {label}\n      </span>\n\n      <button type=\"button\"\n        className=\"btn btn-outline-success btn-sm float-right\"\n        onClick={onToggleImportant}>\n        <i className=\"fa fa-exclamation\" />\n      </button>\n\n      <button type=\"button\"\n        className=\"btn btn-outline-danger btn-sm float-right\"\n        onClick={onDeleted}>\n        <i className=\"fa fa-trash-o\" />\n      </button>\n    </span>\n  );\n};\n\nexport default TodoListItem;","import TodoList from \"./todo-list\";\n\nexport default TodoList;","import React from 'react';\n\nimport TodoListItem from '../todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = (\n  { todos,\n    onDeleted,\n    onToggleImportant,\n    onToggleDone }\n) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem\n          {...itemProps}\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)} \n          onToggleDone={() => onToggleDone(id)} />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      {elements}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusButton from \"./item-status-button\";\n\nexport default ItemStatusButton;","import React from 'react';\n\nconst ItemStatusButton = (props) => {\n  return (\n    <button type=\"button\"\n      className={\"btn \" + props.classes}\n      onClick={props.onBtnClick}>\n      {props.buttonLabel}\n    </button>\n  );\n};\n\nexport default ItemStatusButton;","import ItemStatusFilter from \"./item-status-filter\";\n\nexport default ItemStatusFilter;","import React, { Component } from 'react';\n\nimport './item-status-filter.css';\n\nimport ItemStatusButton from \"../item-status-button\";\n\nexport default class ItemStatusFilter extends Component {\n\n  render() {\n    const { onBtnClick, statusButtonActive } = this.props;\n\n    const activeClass = \"btn-info\";\n    const secondaryClass = \"btn-outline-secondary\";\n\n    // if()\n    return (\n      <div className=\"btn-group\">\n        <ItemStatusButton\n          buttonLabel=\"All\"\n          classes={statusButtonActive === \"All\" ? activeClass : secondaryClass}\n          onBtnClick={onBtnClick} />\n        <ItemStatusButton\n          buttonLabel=\"Active\"\n          classes={statusButtonActive === \"Active\" ? activeClass : secondaryClass}\n          onBtnClick={onBtnClick} />\n        <ItemStatusButton\n          buttonLabel=\"Done\"\n          classes={statusButtonActive === \"Done\" ? activeClass : secondaryClass}\n          onBtnClick={onBtnClick} />\n        {/* <button type=\"button\"\n          className=\"btn btn-info\">All</button>\n        <button type=\"button\"\n          className=\"btn btn-outline-secondary\">Active</button>\n        <button type=\"button\"\n          className=\"btn btn-outline-secondary\">Done</button> */}\n      </div>\n    );\n  }\n};","import ItemAddForm from \"./item-add-form\";\n\nexport default ItemAddForm;","import React, { Component } from 'react';\n\nimport \"./item-add-form.css\";\n\nexport default class ItemAddForm extends Component {\n\n  state = {\n    label: \"\"\n  };\n\n  onLabelChange = (event) => {\n    this.setState({\n      label: event.target.value\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n      label: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"item-add-form d-flex\"\n        onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          onChange={this.onLabelChange}\n          placeholder=\"What needs to be done?\"\n          value={this.state.label} />\n        <button className=\"btn btn-outline-secondary\">\n          Add Item\n        </button>\n      </form>\n    )\n  }\n};\n","import App from './app';\n\nexport default App;","import React, { Component } from 'react';\n\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from \"../item-add-form\";\n\nimport './app.css';\n\nexport default class App extends Component {\n\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTodoItem(\"Drink Coffee\"),\n      this.createTodoItem(\"Make Awesome App\"),\n      this.createTodoItem(\"Have a Lunch\")\n    ],\n    searchText: \"\",\n    statusButtonActive: \"All\"\n  };\n\n  componentDidMount() {\n    const todoLS = localStorage.getItem(\"todos\");\n\n    if (todoLS) {\n      this.setState({\n        todoData: JSON.parse(todoLS)\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todoData !== this.state.todoData) {\n      localStorage.setItem(\"todos\", JSON.stringify(this.state.todoData))\n    }\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId += 1\n    };\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ todoData }) => {\n      const newArr = todoData.filter(el => el.id !== id);\n\n      return {\n        todoData: newArr\n      };\n    });\n  };\n\n  addItem = (text) => {\n    const newItem = this.createTodoItem(text);\n\n    this.setState(({ todoData }) => {\n      const newArray = [\n        ...todoData,\n        newItem\n      ];\n\n      return {\n        todoData: newArray\n      }\n    })\n  };\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id);\n    const oldItem = arr[idx];\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n    return [\n      ...arr.slice(0, idx),\n      newItem,\n      ...arr.slice(idx + 1)\n    ];\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, \"important\")\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      return {\n        todoData: this.toggleProperty(todoData, id, \"done\")\n      };\n    });\n  };\n\n  search(items, searchText) {\n    if (searchText.length === 0) {\n      return items;\n    }\n    return items\n      .filter(el => el.label.toLowerCase().includes(searchText.toLowerCase()));\n  };\n\n  onSearchChange = (event) => {\n    this.setState({\n      searchText: event.target.value,\n    })\n  };\n\n  onStatusFilterItems(items, btnType) {\n    if (btnType === \"Active\") {\n      return items.filter(el => !el.done);\n    } else if (btnType === \"Done\") {\n      return items.filter(el => el.done);\n    } else {\n      return items;\n    }\n  };\n\n  onBtnClick = (event) => {\n    if (event.target.textContent === this.state.statusButtonActive) return;\n    this.setState({\n      statusButtonActive: event.target.textContent\n    });\n  };\n\n  render() {\n    const { todoData, searchText, statusButtonActive } = this.state;\n\n    const visibleItems = this.onStatusFilterItems(this.search(todoData, searchText), statusButtonActive);\n    // const filteredStatusItems = this.onStatusFilterItems(todoData, statusButtonActive)\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n\n    return (\n      <div className=\"todo-app\" >\n        <AppHeader toDo={todoCount} done={doneCount} />\n        <div className=\"top-panel d-flex\">\n          <SearchPanel\n            onSearchChange={this.onSearchChange}\n            value={searchText} />\n          <ItemStatusFilter\n            onBtnClick={this.onBtnClick}\n            statusButtonActive={this.state.statusButtonActive} />\n        </div>\n\n        <TodoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleDone={this.onToggleDone} />\n\n        <ItemAddForm onItemAdded={this.addItem} />\n      </div>\n    );\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));"],"sourceRoot":""}